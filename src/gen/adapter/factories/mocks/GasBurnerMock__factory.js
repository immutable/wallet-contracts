Object.defineProperty(exports, "__esModule", { value: true });
exports.GasBurnerMock__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint256",
                name: "_val",
                type: "uint256",
            },
        ],
        name: "ProvidedGas",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_burn",
                type: "uint256",
            },
        ],
        name: "burnGas",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610107806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634ad5d16f14602d575b600080fd5b605660048036036020811015604157600080fd5b81019080803590602001909291905050506058565b005b7fb5769a7bae701ca7bcd4ed2e803959a466a236728fcb0dc25fa836e3a38bc2225a6040518082815260200191505060405180910390a16000805a90505b825a8203101560cc5781604051602001808281526020019150506040516020818303038152906040528051906020012091506096565b50505056fea264697066735822122014f287f61da59a1501b6ff25834b5ba7e7ba5015f7e540e3acb77c108281945a64736f6c63430007060033";
const isSuperArgs = (xs) => xs.length > 1;
class GasBurnerMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.GasBurnerMock__factory = GasBurnerMock__factory;
GasBurnerMock__factory.bytecode = _bytecode;
GasBurnerMock__factory.abi = _abi;

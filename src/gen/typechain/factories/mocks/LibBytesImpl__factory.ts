/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LibBytesImpl,
  LibBytesImplInterface,
} from "../../mocks/LibBytesImpl";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "readAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_size",
        type: "uint256",
      },
    ],
    name: "readBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "readBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "readBytes66",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "readFirstUint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "readUint16",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "readUint8Uint8",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e45806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063afa3102d1161005b578063afa3102d14610253578063ca9cd01d14610360578063e8a7c08a14610463578063f0e9da231461050e5761007d565b8063285badc214610082578063a23ccef61461011a578063af500fb7146101bc575b600080fd5b6100f96004803603602081101561009857600080fd5b81019080803590602001906401000000008111156100b557600080fd5b8201836020820111156100c757600080fd5b803590602001918460018302840111640100000000831117156100e957600080fd5b90919293919293905050506105c2565b604051808361ffff1681526020018281526020019250505060405180910390f35b61019b6004803603604081101561013057600080fd5b810190808035906020019064010000000081111561014d57600080fd5b82018360208201111561015f57600080fd5b8035906020019184600183028401116401000000008311171561018157600080fd5b90919293919293908035906020019092919050505061061d565b604051808361ffff1681526020018281526020019250505060405180910390f35b61023d600480360360408110156101d257600080fd5b81019080803590602001906401000000008111156101ef57600080fd5b82018360208201111561020157600080fd5b8035906020019184600183028401116401000000008311171561022357600080fd5b909192939192939080359060200190929190505050610683565b6040518082815260200191505060405180910390f35b6102de6004803603606081101561026957600080fd5b810190808035906020019064010000000081111561028657600080fd5b82018360208201111561029857600080fd5b803590602001918460018302840111640100000000831117156102ba57600080fd5b909192939192939080359060200190929190803590602001909291905050506106e5565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b83811015610324578082015181840152602081019050610309565b50505050905090810190601f1680156103515780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6103e16004803603604081101561037657600080fd5b810190808035906020019064010000000081111561039357600080fd5b8201836020820111156103a557600080fd5b803590602001918460018302840111640100000000831117156103c757600080fd5b90919293919293908035906020019092919050505061074f565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561042757808201518184015260208101905061040c565b50505050905090810190601f1680156104545780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6104e46004803603604081101561047957600080fd5b810190808035906020019064010000000081111561049657600080fd5b8201836020820111156104a857600080fd5b803590602001918460018302840111640100000000831117156104ca57600080fd5b9091929391929390803590602001909291905050506107b6565b604051808460ff1681526020018360ff168152602001828152602001935050505060405180910390f35b61058f6004803603604081101561052457600080fd5b810190808035906020019064010000000081111561054157600080fd5b82018360208201111561055357600080fd5b8035906020019184600183028401116401000000008311171561057557600080fd5b909192939192939080359060200190929190505050610821565b604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b60008061061284848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610887565b915091509250929050565b6000806106778386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506108fa90919063ffffffff16565b91509150935093915050565b60006106dc8285858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061097f90919063ffffffff16565b90509392505050565b60606000610742848488888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506109f39092919063ffffffff16565b9150915094509492505050565b606060006107aa8386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610af690919063ffffffff16565b91509150935093915050565b60008060006108128487878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610bda90919063ffffffff16565b92509250925093509350939050565b60008061087b8386868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c6690919063ffffffff16565b91509150935093915050565b60008082602001518060f01c925060029150508251600211156108f5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610d216027913960400191505060405180910390fd5b915091565b6000808360200183015161ffff8160f01c1692506002840191505082811161091e57fe5b8351811115610978576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610db26022913960400191505060405180910390fd5b9250929050565b600060208201835110156109de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180610dd4603c913960400191505060405180910390fd5b60006020830190508084015191505092915050565b606060008267ffffffffffffffff81118015610a0e57600080fd5b506040519080825280601f01601f191660200182016040528015610a415781602001600182028036833780820191505090505b509150838501602001600060205b85811015610a6d578183015181860152809150602081019050610a4f565b856020018501805183850151838801528082528789019550505050505083811015610a9457fe5b8451811115610aee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610d916021913960400191505060405180910390fd5b935093915050565b60606000604267ffffffffffffffff81118015610b1257600080fd5b506040519080825280601f01601f191660200182016040528015610b455781602001600182028036833780820191505090505b50915082840160200180516020840152602081015160408401526022810151604284015260428401915050828111610b7957fe5b8351811115610bd3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d486023913960400191505060405180910390fd5b9250929050565b6000806000846020018401518060f81c935060ff8160f01c16925060028501915050838111610c0557fe5b8451811115610c5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180610d6b6026913960400191505060405180910390fd5b9250925092565b6000808360200183015173ffffffffffffffffffffffffffffffffffffffff8160601c16925060148401915050828111610c9c57fe5b8351811115610cf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610cfe6023913960400191505060405180910390fd5b925092905056fe4c696242797465732372656164416464726573733a204f55545f4f465f424f554e44534c696242797465732372656164466972737455696e7431363a204f55545f4f465f424f554e44534c696242797465732372656164427974657336363a204f55545f4f465f424f554e44534c69624279746573237265616455696e743855696e74383a204f55545f4f465f424f554e44534c69624279746573237265616442797465733a204f55545f4f465f424f554e44534c69624279746573237265616455696e7431363a204f55545f4f465f424f554e44534c696242797465732372656164427974657333323a20475245415445525f4f525f455155414c5f544f5f33325f4c454e4754485f5245515549524544a26469706673582212202ae9d8b332df82d4b6dfe0d29afd4f882a8d18ef50c0a709ab32ef33ed796bfd64736f6c63430007060033";

type LibBytesImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibBytesImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibBytesImpl__factory extends ContractFactory {
  constructor(...args: LibBytesImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibBytesImpl> {
    return super.deploy(overrides || {}) as Promise<LibBytesImpl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibBytesImpl {
    return super.attach(address) as LibBytesImpl;
  }
  override connect(signer: Signer): LibBytesImpl__factory {
    return super.connect(signer) as LibBytesImpl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibBytesImplInterface {
    return new utils.Interface(_abi) as LibBytesImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibBytesImpl {
    return new Contract(address, _abi, signerOrProvider) as LibBytesImpl;
  }
}

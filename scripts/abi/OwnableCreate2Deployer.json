{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyDeployed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeployFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeployInitFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EmptyBytecode",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeTransferFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "deployedAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "bytecodeHash",
          "type": "bytes32"
        }
      ],
      "name": "Deployed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "deploy",
      "outputs": [
        {
          "internalType": "address",
          "name": "deployedAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "init",
          "type": "bytes"
        }
      ],
      "name": "deployAndInit",
      "outputs": [
        {
          "internalType": "address",
          "name": "deployedAddress_",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytecode",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        }
      ],
      "name": "deployedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161090e38038061090e83398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610811806100fd6000396000f3fe6080604052600436106100555760003560e01c80634af63f021461005a578063715018a6146100895780638da5cb5b146100a0578063c2b1041c146100be578063cf4d6432146100de578063f2fde38b146100f1575b600080fd5b61006d61006836600461065d565b610111565b6040516001600160a01b03909116815260200160405180910390f35b34801561009557600080fd5b5061009e6101ce565b005b3480156100ac57600080fd5b506000546001600160a01b031661006d565b3480156100ca57600080fd5b5061006d6100d93660046106be565b6101e2565b61006d6100ec366004610715565b61022e565b3480156100fd57600080fd5b5061009e61010c3660046107b0565b61036e565b60408051336020820152908101829052600090819060600160405160208183030381529060405280519060200120905061014b84826103b1565b91503415610166576101666001600160a01b038316346103c6565b61017084826103f7565b915082336001600160a01b0316836001600160a01b03167fd579261046780ec80c4dae1bc57abdb62c58df8af1531e63b4e8bcc08bcf46ec87805190602001206040516101bf91815260200190565b60405180910390a45092915050565b6101d661040b565b6101e06000610438565b565b604080516001600160a01b0384166020820152908101829052600090819060600160405160208183030381529060405280519060200120905061022585826103b1565b95945050505050565b60408051336020820152908101849052600090819060600160405160208183030381529060405280519060200120905061026886826103b1565b91503415610283576102836001600160a01b038316346103c6565b61028d86826103f7565b915084336001600160a01b0316836001600160a01b03167fd579261046780ec80c4dae1bc57abdb62c58df8af1531e63b4e8bcc08bcf46ec89805190602001206040516102dc91815260200190565b60405180910390a46000826001600160a01b031685856040516103009291906107cb565b6000604051808303816000865af19150503d806000811461033d576040519150601f19603f3d011682016040523d82523d6000602084013e610342565b606091505b50509050806103645760405163139c636760e01b815260040160405180910390fd5b5050949350505050565b61037661040b565b6001600160a01b0381166103a557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103ae81610438565b50565b60006103bd8383610488565b90505b92915050565b600080600080600085875af19050806103f257604051633d2cec6f60e21b815260040160405180910390fd5b505050565b600061040161040b565b6103bd83836104e4565b6000546001600160a01b031633146101e05760405163118cdaa760e01b815233600482015260240161039c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8151602092830120604080516001600160f81b0319818601523060601b6bffffffffffffffffffffffff191660218201526035810193909352605580840192909252805180840390920182526075909201909152805191012090565b60006104f08383610488565b90508251600003610514576040516321744a5960e01b815260040160405180910390fd5b610526816001600160a01b0316610577565b156105445760405163a6ef0ba160e01b815260040160405180910390fd5b818351602085016000f590506001600160a01b0381166103c05760405163b4f5411160e01b815260040160405180910390fd5b60006001600160a01b0382163f80158015906105b357507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114155b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105e157600080fd5b813567ffffffffffffffff808211156105fc576105fc6105ba565b604051601f8301601f19908116603f01168101908282118183101715610624576106246105ba565b8160405283815286602085880101111561063d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561067057600080fd5b823567ffffffffffffffff81111561068757600080fd5b610693858286016105d0565b95602094909401359450505050565b80356001600160a01b03811681146106b957600080fd5b919050565b6000806000606084860312156106d357600080fd5b833567ffffffffffffffff8111156106ea57600080fd5b6106f6868287016105d0565b935050610705602085016106a2565b9150604084013590509250925092565b6000806000806060858703121561072b57600080fd5b843567ffffffffffffffff8082111561074357600080fd5b61074f888389016105d0565b955060208701359450604087013591508082111561076c57600080fd5b818701915087601f83011261078057600080fd5b81358181111561078f57600080fd5b8860208285010111156107a157600080fd5b95989497505060200194505050565b6000602082840312156107c257600080fd5b6103bd826106a2565b818382376000910190815291905056fea26469706673582212205c9c681ecd6595a070bbd0db3c2888337fd0f85e039cacc3664dcfe181392a0164736f6c63430008140033",
    "sourceMap": "1191:1673:41:-:0;;;1259:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1294:5;-1:-1:-1;;;;;1273:26:34;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:34;;1350:1;1322:31;;;455:51:45;428:18;;1322:31:34;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;1259:44:41;1191:1673;;2912:187:34;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:34;;;-1:-1:-1;;;;;;3020:17:34;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:45:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:45;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:45:o;309:203::-;1191:1673:41;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100555760003560e01c80634af63f021461005a578063715018a6146100895780638da5cb5b146100a0578063c2b1041c146100be578063cf4d6432146100de578063f2fde38b146100f1575b600080fd5b61006d61006836600461065d565b610111565b6040516001600160a01b03909116815260200160405180910390f35b34801561009557600080fd5b5061009e6101ce565b005b3480156100ac57600080fd5b506000546001600160a01b031661006d565b3480156100ca57600080fd5b5061006d6100d93660046106be565b6101e2565b61006d6100ec366004610715565b61022e565b3480156100fd57600080fd5b5061009e61010c3660046107b0565b61036e565b60408051336020820152908101829052600090819060600160405160208183030381529060405280519060200120905061014b84826103b1565b91503415610166576101666001600160a01b038316346103c6565b61017084826103f7565b915082336001600160a01b0316836001600160a01b03167fd579261046780ec80c4dae1bc57abdb62c58df8af1531e63b4e8bcc08bcf46ec87805190602001206040516101bf91815260200190565b60405180910390a45092915050565b6101d661040b565b6101e06000610438565b565b604080516001600160a01b0384166020820152908101829052600090819060600160405160208183030381529060405280519060200120905061022585826103b1565b95945050505050565b60408051336020820152908101849052600090819060600160405160208183030381529060405280519060200120905061026886826103b1565b91503415610283576102836001600160a01b038316346103c6565b61028d86826103f7565b915084336001600160a01b0316836001600160a01b03167fd579261046780ec80c4dae1bc57abdb62c58df8af1531e63b4e8bcc08bcf46ec89805190602001206040516102dc91815260200190565b60405180910390a46000826001600160a01b031685856040516103009291906107cb565b6000604051808303816000865af19150503d806000811461033d576040519150601f19603f3d011682016040523d82523d6000602084013e610342565b606091505b50509050806103645760405163139c636760e01b815260040160405180910390fd5b5050949350505050565b61037661040b565b6001600160a01b0381166103a557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6103ae81610438565b50565b60006103bd8383610488565b90505b92915050565b600080600080600085875af19050806103f257604051633d2cec6f60e21b815260040160405180910390fd5b505050565b600061040161040b565b6103bd83836104e4565b6000546001600160a01b031633146101e05760405163118cdaa760e01b815233600482015260240161039c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8151602092830120604080516001600160f81b0319818601523060601b6bffffffffffffffffffffffff191660218201526035810193909352605580840192909252805180840390920182526075909201909152805191012090565b60006104f08383610488565b90508251600003610514576040516321744a5960e01b815260040160405180910390fd5b610526816001600160a01b0316610577565b156105445760405163a6ef0ba160e01b815260040160405180910390fd5b818351602085016000f590506001600160a01b0381166103c05760405163b4f5411160e01b815260040160405180910390fd5b60006001600160a01b0382163f80158015906105b357507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708114155b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105e157600080fd5b813567ffffffffffffffff808211156105fc576105fc6105ba565b604051601f8301601f19908116603f01168101908282118183101715610624576106246105ba565b8160405283815286602085880101111561063d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561067057600080fd5b823567ffffffffffffffff81111561068757600080fd5b610693858286016105d0565b95602094909401359450505050565b80356001600160a01b03811681146106b957600080fd5b919050565b6000806000606084860312156106d357600080fd5b833567ffffffffffffffff8111156106ea57600080fd5b6106f6868287016105d0565b935050610705602085016106a2565b9150604084013590509250925092565b6000806000806060858703121561072b57600080fd5b843567ffffffffffffffff8082111561074357600080fd5b61074f888389016105d0565b955060208701359450604087013591508082111561076c57600080fd5b818701915087601f83011261078057600080fd5b81358181111561078f57600080fd5b8860208285010111156107a157600080fd5b95989497505060200194505050565b6000602082840312156107c257600080fd5b6103bd826106a2565b818382376000910190815291905056fea26469706673582212205c9c681ecd6595a070bbd0db3c2888337fd0f85e039cacc3664dcfe181392a0164736f6c63430008140033",
    "sourceMap": "1191:1673:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:544:4;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1426:32:45;;;1408:51;;1396:2;1381:18;1208:544:4;;;;;;;2293:101:34;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;-1:-1:-1;1684:7:34;1710:6;-1:-1:-1;;;;;1710:6:34;1638:85;;4051:266:4;;;;;;;;;;-1:-1:-1;4051:266:4;;;;;:::i;:::-;;:::i;2755:708::-;;;;;;:::i;:::-;;:::i;2543:215:34:-;;;;;;;;;;-1:-1:-1;2543:215:34;;;;;:::i;:::-;;:::i;1208:544:4:-;1354:28;;;1365:10;1354:28;;;3342:51:45;3409:18;;;3402:34;;;1287:24:4;;;;3315:18:45;;1354:28:4;;;;;;;;;;;;1344:39;;;;;;1323:60;;1412:38;1429:8;1439:10;1412:16;:38::i;:::-;1393:57;-1:-1:-1;1465:9:4;:13;1461:145;;1549:46;-1:-1:-1;;;;;1549:35:4;;1585:9;1549:35;:46::i;:::-;1635:29;1643:8;1653:10;1635:7;:29::i;:::-;1616:48;;1719:4;1707:10;-1:-1:-1;;;;;1680:65:4;1689:16;-1:-1:-1;;;;;1680:65:4;;1735:8;1725:19;;;;;;1680:65;;;;3593:25:45;;3581:2;3566:18;;3447:177;1680:65:4;;;;;;;;1313:439;1208:544;;;;:::o;2293:101:34:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4051:266:4:-;4230:24;;;-1:-1:-1;;;;;3360:32:45;;4230:24:4;;;3342:51:45;3409:18;;;3402:34;;;4180:7:4;;;;3315:18:45;;4230:24:4;;;;;;;;;;;;4220:35;;;;;;4199:56;;4272:38;4289:8;4299:10;4272:16;:38::i;:::-;4265:45;4051:266;-1:-1:-1;;;;;4051:266:4:o;2755:708::-;2959:28;;;2970:10;2959:28;;;3342:51:45;3409:18;;;3402:34;;;2892:24:4;;;;3315:18:45;;2959:28:4;;;;;;;;;;;;2949:39;;;;;;2928:60;;3017:38;3034:8;3044:10;3017:16;:38::i;:::-;2998:57;-1:-1:-1;3070:9:4;:13;3066:145;;3154:46;-1:-1:-1;;;;;3154:35:4;;3190:9;3154:35;:46::i;:::-;3240:29;3248:8;3258:10;3240:7;:29::i;:::-;3221:48;;3324:4;3312:10;-1:-1:-1;;;;;3285:65:4;3294:16;-1:-1:-1;;;;;3285:65:4;;3340:8;3330:19;;;;;;3285:65;;;;3593:25:45;;3581:2;3566:18;;3447:177;3285:65:4;;;;;;;;3362:12;3380:16;-1:-1:-1;;;;;3380:21:4;3402:4;;3380:27;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3361:46;;;3422:7;3417:39;;3438:18;;-1:-1:-1;;;3438:18:4;;;;;;;;;;;3417:39;2918:545;;2755:708;;;;;;:::o;2543:215:34:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:34;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:34;;2700:1:::1;2672:31;::::0;::::1;1408:51:45::0;1381:18;;2672:31:34::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2691:171:41:-;2792:7;2818:37;2834:8;2844:10;2818:15;:37::i;:::-;2811:44;;2691:171;;;;;:::o;557:249:10:-;638:12;734:1;731;728;725;717:6;707:8;700:5;695:41;684:52;;761:7;756:43;;777:22;;-1:-1:-1;;;777:22:10;;;;;;;;;;;756:43;628:178;557:249;;:::o;2005:160:41:-;2102:7;1531:13:34;:11;:13::i;:::-;2128:30:41::1;2137:8;2147:10;2128:8;:30::i;1796:162:34:-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:34;735:10:40;1855:23:34;1851:101;;1901:40;;-1:-1:-1;;;1901:40:34;;735:10:40;1901:40:34;;;1408:51:45;1381:18;;1901:40:34;1262:203:45;2912:187:34;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:34;;;-1:-1:-1;;;;;;3020:17:34;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;1575:591:0:-;2012:19;;;;;;;1830:249;;;-1:-1:-1;;;;;;1830:249:0;;;4191:26:45;1929:4:0;4254:2:45;4250:15;-1:-1:-1;;4246:53:45;4233:11;;;4226:74;4316:12;;;4309:28;;;;4353:12;;;;4346:28;;;;1830:249:0;;;;;;;;;;4390:12:45;;;;1830:249:0;;;1791:314;;;;;;1575:591::o;799:455::-;878:16;917:37;933:8;943:10;917:15;:37::i;:::-;906:48;;969:8;:15;988:1;969:20;965:48;;998:15;;-1:-1:-1;;;998:15:0;;;;;;;;;;;965:48;1027:21;:8;-1:-1:-1;;;;;1027:19:0;;:21::i;:::-;1023:51;;;1057:17;;-1:-1:-1;;;1057:17:0;;;;;;;;;;;1023:51;1167:10;1156:8;1150:15;1145:2;1135:8;1131:17;1128:1;1120:58;1108:70;-1:-1:-1;;;;;;1202:22:0;;1198:49;;1233:14;;-1:-1:-1;;;1233:14:0;;;;;;;;;;;88:450:9;156:4;-1:-1:-1;;;;;199:24:9;;;399:30;;;;;:132;;-1:-1:-1;465:66:9;445:86;;;399:132;380:151;88:450;-1:-1:-1;;;88:450:9:o;14:127:45:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:718;188:5;241:3;234:4;226:6;222:17;218:27;208:55;;259:1;256;249:12;208:55;295:6;282:20;321:18;358:2;354;351:10;348:36;;;364:18;;:::i;:::-;439:2;433:9;407:2;493:13;;-1:-1:-1;;489:22:45;;;513:2;485:31;481:40;469:53;;;537:18;;;557:22;;;534:46;531:72;;;583:18;;:::i;:::-;623:10;619:2;612:22;658:2;650:6;643:18;704:3;697:4;692:2;684:6;680:15;676:26;673:35;670:55;;;721:1;718;711:12;670:55;785:2;778:4;770:6;766:17;759:4;751:6;747:17;734:54;832:1;825:4;820:2;812:6;808:15;804:26;797:37;852:6;843:15;;;;;;146:718;;;;:::o;869:388::-;946:6;954;1007:2;995:9;986:7;982:23;978:32;975:52;;;1023:1;1020;1013:12;975:52;1063:9;1050:23;1096:18;1088:6;1085:30;1082:50;;;1128:1;1125;1118:12;1082:50;1151:49;1192:7;1183:6;1172:9;1168:22;1151:49;:::i;:::-;1141:59;1247:2;1232:18;;;;1219:32;;-1:-1:-1;;;;869:388:45:o;1470:173::-;1538:20;;-1:-1:-1;;;;;1587:31:45;;1577:42;;1567:70;;1633:1;1630;1623:12;1567:70;1470:173;;;:::o;1648:462::-;1734:6;1742;1750;1803:2;1791:9;1782:7;1778:23;1774:32;1771:52;;;1819:1;1816;1809:12;1771:52;1859:9;1846:23;1892:18;1884:6;1881:30;1878:50;;;1924:1;1921;1914:12;1878:50;1947:49;1988:7;1979:6;1968:9;1964:22;1947:49;:::i;:::-;1937:59;;;2015:38;2049:2;2038:9;2034:18;2015:38;:::i;:::-;2005:48;;2100:2;2089:9;2085:18;2072:32;2062:42;;1648:462;;;;;:::o;2115:857::-;2212:6;2220;2228;2236;2289:2;2277:9;2268:7;2264:23;2260:32;2257:52;;;2305:1;2302;2295:12;2257:52;2345:9;2332:23;2374:18;2415:2;2407:6;2404:14;2401:34;;;2431:1;2428;2421:12;2401:34;2454:49;2495:7;2486:6;2475:9;2471:22;2454:49;:::i;:::-;2444:59;;2550:2;2539:9;2535:18;2522:32;2512:42;;2607:2;2596:9;2592:18;2579:32;2563:48;;2636:2;2626:8;2623:16;2620:36;;;2652:1;2649;2642:12;2620:36;2690:8;2679:9;2675:24;2665:34;;2737:7;2730:4;2726:2;2722:13;2718:27;2708:55;;2759:1;2756;2749:12;2708:55;2799:2;2786:16;2825:2;2817:6;2814:14;2811:34;;;2841:1;2838;2831:12;2811:34;2886:7;2881:2;2872:6;2868:2;2864:15;2860:24;2857:37;2854:57;;;2907:1;2904;2897:12;2854:57;2115:857;;;;-1:-1:-1;;2938:2:45;2930:11;;-1:-1:-1;;;2115:857:45:o;2977:186::-;3036:6;3089:2;3077:9;3068:7;3064:23;3060:32;3057:52;;;3105:1;3102;3095:12;3057:52;3128:29;3147:9;3128:29;:::i;3629:271::-;3812:6;3804;3799:3;3786:33;3768:3;3838:16;;3863:13;;;3838:16;3629:271;-1:-1:-1;3629:271:45:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deploy(bytes,bytes32)": "4af63f02",
    "deployAndInit(bytes,bytes32,bytes)": "cf4d6432",
    "deployedAddress(bytes,address,bytes32)": "c2b1041c",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyDeployed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeployInitFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyBytecode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeTransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"bytecodeHash\",\"type\":\"bytes32\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress_\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"init\",\"type\":\"bytes\"}],\"name\":\"deployAndInit\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress_\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"deployedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract extends the {Deployer} contract from the Axelar SDK, by adding basic access control to the deployment functions.      The contract has an owner, which is the only entity that can deploy new contracts.The contract deploys a contract with the same bytecode, salt, and sender to the same address.      The address where the contract will be deployed can be found using {deployedAddress}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"deploy(bytes,bytes32)\":{\"details\":\"The address where the contract will be deployed can be known in advance via {deployedAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already by the same `msg.sender`.\",\"params\":{\"bytecode\":\"The bytecode of the contract to be deployed\",\"salt\":\"A salt to influence the contract address\"},\"returns\":{\"deployedAddress_\":\"The address of the deployed contract\"}},\"deployAndInit(bytes,bytes32,bytes)\":{\"details\":\"The address where the contract will be deployed can be known in advance via {deployedAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already by the same `msg.sender`. - `init` is used to initialize the deployed contract as an option to not have the    constructor args affect the address derived by `CREATE2`.\",\"params\":{\"bytecode\":\"The bytecode of the contract to be deployed\",\"init\":\"Init data used to initialize the deployed contract\",\"salt\":\"A salt to influence the contract address\"},\"returns\":{\"deployedAddress_\":\"The address of the deployed contract\"}},\"deployedAddress(bytes,address,bytes32)\":{\"details\":\"Any change in the `bytecode` (except for `CREATE3`), `sender`, or `salt` will result in a new deployed address.\",\"params\":{\"bytecode\":\"The bytecode of the contract to be deployed\",\"salt\":\"The salt that will be used to influence the contract address\",\"sender\":\"The address that will deploy the contract via the deployment method\"},\"returns\":{\"_0\":\"deployedAddress_ The address that the contract will be deployed to\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"OwnableCreate2Deployer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(bytes,bytes32)\":{\"notice\":\"Deploys a contract using a deployment method defined by derived contracts.\"},\"deployAndInit(bytes,bytes32,bytes)\":{\"notice\":\"Deploys a contract using a deployment method defined by derived contracts and initializes it.\"},\"deployedAddress(bytes,address,bytes32)\":{\"notice\":\"Returns the address where a contract will be stored if deployed via {deploy} or {deployAndInit} by `sender`.\"}},\"notice\":\"Deploys and initializes contracts using the `CREATE2` opcode. The contract exposes two functions, {deploy} and {deployAndInit}.         {deploy} deploys a contract using the `CREATE2` opcode, and {deployAndInit} additionally initializes the contract using provided data.         The latter offers a way of ensuring that the constructor arguments do not affect the deployment address.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/OwnableCreate2Deployer.sol\":\"OwnableCreate2Deployer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/axelar-gmp-sdk-solidity/contracts/deploy/Create2.sol\":{\"keccak256\":\"0xad0d7ba0cd6b1e6f3de98c627f64882f503d83fc208633fcc3526102b3e9f6a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a645188078c97b3870eca6f4f530fdf088a9e2f6a00db5755cab769985c0c45b\",\"dweb:/ipfs/QmXAhFJgHCqfjxkb6TuJWuCmbMnZAkBii7gAxC8Z2u99tQ\"]},\"lib/axelar-gmp-sdk-solidity/contracts/deploy/Deployer.sol\":{\"keccak256\":\"0xdbb0583c3ed69b0c893811dc12a90f16f8732af8d7d9fa196b16f62fe6ee9a27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://357e3c22364a19d456b8f82f325950c0d45ddbf9cb85a6e06d8bcc55a86a96ed\",\"dweb:/ipfs/QmccEADTNZZTVqFftUgwdEADLESPF1VoTwsSBKhUt54vAJ\"]},\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IDeploy.sol\":{\"keccak256\":\"0xfd4bd31b4d399eb3aea5b396c285cb842f408d0f01f16666f184f8055ab5df49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d8143ebebd82b18df3705268b3ee2a285312b5d2a55c407b7b73553e0f306b\",\"dweb:/ipfs/QmYvhfWJWkV93pri3E3DfHsSSsh4n4p6wdVgo9biDDH3v4\"]},\"lib/axelar-gmp-sdk-solidity/contracts/interfaces/IDeployer.sol\":{\"keccak256\":\"0xb132dbb8aa4bac93cd69d6ec52a172c5b17b6c078749f9428a9656a036a5e15b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43f756ebf35bf9f146610c599ab555d6af4a701d1564029e7c6e57be4aafa335\",\"dweb:/ipfs/QmdcmNAdEsW9Rf5W8q5s4TyZpXy3s2eDnaF79EfRhWyTS7\"]},\"lib/axelar-gmp-sdk-solidity/contracts/libs/ContractAddress.sol\":{\"keccak256\":\"0x4e4293ef5d3d5dec251982f0dc9bf8f09d436cbe24b6ec2b9849b0ce350e92ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56f7ac3b8debf1499ba7e8f397a601a99bf98ef7bce1ec3971c15c0d010f1583\",\"dweb:/ipfs/QmUk1VyKyKXDHAAwbwGmXw1iNriwsw2LPWHoPPA2zasytA\"]},\"lib/axelar-gmp-sdk-solidity/contracts/libs/SafeNativeTransfer.sol\":{\"keccak256\":\"0x411c13755c0d2b74b1aa4c3ec1df16d2f555a6b3dc4c84d7232c0f4558712632\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bd2a2e8f36f5d797c47281eb0f3e6bd0b23c6d5e5c7a0842d4d7c86171d1fbd\",\"dweb:/ipfs/QmPCQRfoERaDZmJtgH1rRsFCU7zXBEoMzhAeYKDNUZbr1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"src/OwnableCreate2Deployer.sol\":{\"keccak256\":\"0x5dd0c54577a91aee53e03566c8a7ad39b5230193cbb95794c14566b1eb00f991\",\"license\":\"Apache 2.0\",\"urls\":[\"bzz-raw://06ef834ace742dd1fffb34b9a854f7abb55ac63a412713c857ee5f6cea6cf22c\",\"dweb:/ipfs/QmTH3HNgEgn5L4LYRWvWVFiZax32wnSRNuun8hyQfZCc88\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyDeployed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeployFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeployInitFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EmptyBytecode"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeTransferFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deployedAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "bytecodeHash",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deployed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deploy",
          "outputs": [
            {
              "internalType": "address",
              "name": "deployedAddress_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "init",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deployAndInit",
          "outputs": [
            {
              "internalType": "address",
              "name": "deployedAddress_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deployedAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deploy(bytes,bytes32)": {
            "details": "The address where the contract will be deployed can be known in advance via {deployedAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already by the same `msg.sender`.",
            "params": {
              "bytecode": "The bytecode of the contract to be deployed",
              "salt": "A salt to influence the contract address"
            },
            "returns": {
              "deployedAddress_": "The address of the deployed contract"
            }
          },
          "deployAndInit(bytes,bytes32,bytes)": {
            "details": "The address where the contract will be deployed can be known in advance via {deployedAddress}. The bytecode for a contract can be obtained from Solidity with `type(contractName).creationCode`. Requirements: - `bytecode` must not be empty. - `salt` must have not been used for `bytecode` already by the same `msg.sender`. - `init` is used to initialize the deployed contract as an option to not have the    constructor args affect the address derived by `CREATE2`.",
            "params": {
              "bytecode": "The bytecode of the contract to be deployed",
              "init": "Init data used to initialize the deployed contract",
              "salt": "A salt to influence the contract address"
            },
            "returns": {
              "deployedAddress_": "The address of the deployed contract"
            }
          },
          "deployedAddress(bytes,address,bytes32)": {
            "details": "Any change in the `bytecode` (except for `CREATE3`), `sender`, or `salt` will result in a new deployed address.",
            "params": {
              "bytecode": "The bytecode of the contract to be deployed",
              "salt": "The salt that will be used to influence the contract address",
              "sender": "The address that will deploy the contract via the deployment method"
            },
            "returns": {
              "_0": "deployedAddress_ The address that the contract will be deployed to"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deploy(bytes,bytes32)": {
            "notice": "Deploys a contract using a deployment method defined by derived contracts."
          },
          "deployAndInit(bytes,bytes32,bytes)": {
            "notice": "Deploys a contract using a deployment method defined by derived contracts and initializes it."
          },
          "deployedAddress(bytes,address,bytes32)": {
            "notice": "Returns the address where a contract will be stored if deployed via {deploy} or {deployAndInit} by `sender`."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "axelar-gmp-sdk-solidity/=lib/axelar-gmp-sdk-solidity/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/OwnableCreate2Deployer.sol": "OwnableCreate2Deployer"
      },
      "libraries": {}
    },
    "sources": {
      "lib/axelar-gmp-sdk-solidity/contracts/deploy/Create2.sol": {
        "keccak256": "0xad0d7ba0cd6b1e6f3de98c627f64882f503d83fc208633fcc3526102b3e9f6a5",
        "urls": [
          "bzz-raw://a645188078c97b3870eca6f4f530fdf088a9e2f6a00db5755cab769985c0c45b",
          "dweb:/ipfs/QmXAhFJgHCqfjxkb6TuJWuCmbMnZAkBii7gAxC8Z2u99tQ"
        ],
        "license": "MIT"
      },
      "lib/axelar-gmp-sdk-solidity/contracts/deploy/Deployer.sol": {
        "keccak256": "0xdbb0583c3ed69b0c893811dc12a90f16f8732af8d7d9fa196b16f62fe6ee9a27",
        "urls": [
          "bzz-raw://357e3c22364a19d456b8f82f325950c0d45ddbf9cb85a6e06d8bcc55a86a96ed",
          "dweb:/ipfs/QmccEADTNZZTVqFftUgwdEADLESPF1VoTwsSBKhUt54vAJ"
        ],
        "license": "MIT"
      },
      "lib/axelar-gmp-sdk-solidity/contracts/interfaces/IDeploy.sol": {
        "keccak256": "0xfd4bd31b4d399eb3aea5b396c285cb842f408d0f01f16666f184f8055ab5df49",
        "urls": [
          "bzz-raw://43d8143ebebd82b18df3705268b3ee2a285312b5d2a55c407b7b73553e0f306b",
          "dweb:/ipfs/QmYvhfWJWkV93pri3E3DfHsSSsh4n4p6wdVgo9biDDH3v4"
        ],
        "license": "MIT"
      },
      "lib/axelar-gmp-sdk-solidity/contracts/interfaces/IDeployer.sol": {
        "keccak256": "0xb132dbb8aa4bac93cd69d6ec52a172c5b17b6c078749f9428a9656a036a5e15b",
        "urls": [
          "bzz-raw://43f756ebf35bf9f146610c599ab555d6af4a701d1564029e7c6e57be4aafa335",
          "dweb:/ipfs/QmdcmNAdEsW9Rf5W8q5s4TyZpXy3s2eDnaF79EfRhWyTS7"
        ],
        "license": "MIT"
      },
      "lib/axelar-gmp-sdk-solidity/contracts/libs/ContractAddress.sol": {
        "keccak256": "0x4e4293ef5d3d5dec251982f0dc9bf8f09d436cbe24b6ec2b9849b0ce350e92ee",
        "urls": [
          "bzz-raw://56f7ac3b8debf1499ba7e8f397a601a99bf98ef7bce1ec3971c15c0d010f1583",
          "dweb:/ipfs/QmUk1VyKyKXDHAAwbwGmXw1iNriwsw2LPWHoPPA2zasytA"
        ],
        "license": "MIT"
      },
      "lib/axelar-gmp-sdk-solidity/contracts/libs/SafeNativeTransfer.sol": {
        "keccak256": "0x411c13755c0d2b74b1aa4c3ec1df16d2f555a6b3dc4c84d7232c0f4558712632",
        "urls": [
          "bzz-raw://1bd2a2e8f36f5d797c47281eb0f3e6bd0b23c6d5e5c7a0842d4d7c86171d1fbd",
          "dweb:/ipfs/QmPCQRfoERaDZmJtgH1rRsFCU7zXBEoMzhAeYKDNUZbr1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "src/OwnableCreate2Deployer.sol": {
        "keccak256": "0x5dd0c54577a91aee53e03566c8a7ad39b5230193cbb95794c14566b1eb00f991",
        "urls": [
          "bzz-raw://06ef834ace742dd1fffb34b9a854f7abb55ac63a412713c857ee5f6cea6cf22c",
          "dweb:/ipfs/QmTH3HNgEgn5L4LYRWvWVFiZax32wnSRNuun8hyQfZCc88"
        ],
        "license": "Apache 2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/OwnableCreate2Deployer.sol",
    "id": 46757,
    "exportedSymbols": {
      "Context": [
        46696
      ],
      "Create2": [
        91
      ],
      "Deployer": [
        450
      ],
      "Ownable": [
        45869
      ],
      "OwnableCreate2Deployer": [
        46756
      ]
    },
    "nodeType": "SourceUnit",
    "src": "82:2783:41",
    "nodes": [
      {
        "id": 46698,
        "nodeType": "PragmaDirective",
        "src": "82:23:41",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 46699,
        "nodeType": "ImportDirective",
        "src": "107:52:41",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46757,
        "sourceUnit": 45870,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 46701,
        "nodeType": "ImportDirective",
        "src": "160:80:41",
        "nodes": [],
        "absolutePath": "lib/axelar-gmp-sdk-solidity/contracts/deploy/Deployer.sol",
        "file": "@axelar-gmp-sdk-solidity/contracts/deploy/Deployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46757,
        "sourceUnit": 451,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46700,
              "name": "Deployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 450,
              "src": "168:8:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46703,
        "nodeType": "ImportDirective",
        "src": "241:78:41",
        "nodes": [],
        "absolutePath": "lib/axelar-gmp-sdk-solidity/contracts/deploy/Create2.sol",
        "file": "@axelar-gmp-sdk-solidity/contracts/deploy/Create2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46757,
        "sourceUnit": 92,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46702,
              "name": "Create2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91,
              "src": "249:7:41",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46756,
        "nodeType": "ContractDefinition",
        "src": "1191:1673:41",
        "nodes": [
          {
            "id": 46719,
            "nodeType": "FunctionDefinition",
            "src": "1259:44:41",
            "nodes": [],
            "body": {
              "id": 46718,
              "nodeType": "Block",
              "src": "1301:2:41",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 46715,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46712,
                    "src": "1294:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 46716,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46714,
                  "name": "Ownable",
                  "nameLocations": [
                    "1286:7:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45869,
                  "src": "1286:7:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "1286:14:41"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46712,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1279:5:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 46719,
                  "src": "1271:13:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1271:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:15:41"
            },
            "returnParameters": {
              "id": 46717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:41"
            },
            "scope": 46756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46738,
            "nodeType": "FunctionDefinition",
            "src": "2005:160:41",
            "nodes": [],
            "body": {
              "id": 46737,
              "nodeType": "Block",
              "src": "2111:54:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46733,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46722,
                        "src": "2137:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 46734,
                        "name": "deploySalt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46724,
                        "src": "2147:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 46732,
                      "name": "_create2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 55,
                      "src": "2128:8:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) returns (address)"
                      }
                    },
                    "id": 46735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2128:30:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46731,
                  "id": 46736,
                  "nodeType": "Return",
                  "src": "2121:37:41"
                }
              ]
            },
            "baseFunctions": [
              440
            ],
            "documentation": {
              "id": 46720,
              "nodeType": "StructuredDocumentation",
              "src": "1309:691:41",
              "text": " @dev Deploys a contract using the `CREATE2` opcode.\n      This function is called by {deploy} and {deployAndInit} external functions in the {Deployer} contract.\n      This function can only be called by the owner of this contract, hence the external {deploy} and {deployAndInit} functions can only be called by the owner.\n      The address where the contract will be deployed can be found using the {deployedAddress} function.\n @param bytecode The bytecode of the contract to be deployed\n @param deploySalt A salt which is a hash of the salt provided by the sender and the sender's address.\n @return The address of the deployed contract"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46728,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46727,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2083:9:41"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45780,
                  "src": "2083:9:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "2083:9:41"
              }
            ],
            "name": "_deploy",
            "nameLocation": "2014:7:41",
            "overrides": {
              "id": 46726,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2074:8:41"
            },
            "parameters": {
              "id": 46725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46722,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "2035:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 46738,
                  "src": "2022:21:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46721,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46724,
                  "mutability": "mutable",
                  "name": "deploySalt",
                  "nameLocation": "2053:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 46738,
                  "src": "2045:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46723,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2021:43:41"
            },
            "returnParameters": {
              "id": 46731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46730,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46738,
                  "src": "2102:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2102:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2101:9:41"
            },
            "scope": 46756,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46755,
            "nodeType": "FunctionDefinition",
            "src": "2691:171:41",
            "nodes": [],
            "body": {
              "id": 46754,
              "nodeType": "Block",
              "src": "2801:61:41",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46750,
                        "name": "bytecode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46741,
                        "src": "2834:8:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 46751,
                        "name": "deploySalt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46743,
                        "src": "2844:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 46749,
                      "name": "_create2Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "2818:15:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes memory,bytes32) view returns (address)"
                      }
                    },
                    "id": 46752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2818:37:41",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46748,
                  "id": 46753,
                  "nodeType": "Return",
                  "src": "2811:44:41"
                }
              ]
            },
            "baseFunctions": [
              449
            ],
            "documentation": {
              "id": 46739,
              "nodeType": "StructuredDocumentation",
              "src": "2171:515:41",
              "text": " @dev Returns the address where a contract will be stored if deployed via {deploy} or {deployAndInit}.\n      This function is called by the {deployedAddress} external functions in the {Deployer} contract.\n @param bytecode The bytecode of the contract to be deployed\n @param deploySalt A salt which is a hash of the sender's address and the `salt` provided by the sender, when calling the {deployedAddress} function.\n @return The predicted deployment address of the contract"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deployedAddress",
            "nameLocation": "2700:16:41",
            "overrides": {
              "id": 46745,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2774:8:41"
            },
            "parameters": {
              "id": 46744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46741,
                  "mutability": "mutable",
                  "name": "bytecode",
                  "nameLocation": "2730:8:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 46755,
                  "src": "2717:21:41",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46740,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2717:5:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46743,
                  "mutability": "mutable",
                  "name": "deploySalt",
                  "nameLocation": "2748:10:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 46755,
                  "src": "2740:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46742,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:7:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2716:43:41"
            },
            "returnParameters": {
              "id": 46748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46747,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46755,
                  "src": "2792:7:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:41",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:9:41"
            },
            "scope": 46756,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46705,
              "name": "Ownable",
              "nameLocations": [
                "1226:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45869,
              "src": "1226:7:41"
            },
            "id": 46706,
            "nodeType": "InheritanceSpecifier",
            "src": "1226:7:41"
          },
          {
            "baseName": {
              "id": 46707,
              "name": "Create2",
              "nameLocations": [
                "1235:7:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91,
              "src": "1235:7:41"
            },
            "id": 46708,
            "nodeType": "InheritanceSpecifier",
            "src": "1235:7:41"
          },
          {
            "baseName": {
              "id": 46709,
              "name": "Deployer",
              "nameLocations": [
                "1244:8:41"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 450,
              "src": "1244:8:41"
            },
            "id": 46710,
            "nodeType": "InheritanceSpecifier",
            "src": "1244:8:41"
          }
        ],
        "canonicalName": "OwnableCreate2Deployer",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46704,
          "nodeType": "StructuredDocumentation",
          "src": "321:869:41",
          "text": " @title OwnableCreate2Deployer\n @notice Deploys and initializes contracts using the `CREATE2` opcode. The contract exposes two functions, {deploy} and {deployAndInit}.\n         {deploy} deploys a contract using the `CREATE2` opcode, and {deployAndInit} additionally initializes the contract using provided data.\n         The latter offers a way of ensuring that the constructor arguments do not affect the deployment address.\n @dev This contract extends the {Deployer} contract from the Axelar SDK, by adding basic access control to the deployment functions.\n      The contract has an owner, which is the only entity that can deploy new contracts.\n @dev The contract deploys a contract with the same bytecode, salt, and sender to the same address.\n      The address where the contract will be deployed can be found using {deployedAddress}."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46756,
          450,
          514,
          91,
          460,
          45869,
          46696
        ],
        "name": "OwnableCreate2Deployer",
        "nameLocation": "1200:22:41",
        "scope": 46757,
        "usedErrors": [
          455,
          457,
          459,
          469,
          646,
          45735,
          45740
        ],
        "usedEvents": [
          479,
          45746
        ]
      }
    ],
    "license": "Apache 2.0"
  },
  "id": 41
}